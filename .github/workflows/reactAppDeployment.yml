name: Github actions to Deploy React Application

on:
  push:
    branches:
      - main
    paths:
      - 'FrontEnd/**'
      - 'Nginx/**'
jobs:
  ReactAppDeployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Building docker images
        run: |
          ls
          docker-compose -f docker-compose-ci.yml --build-arg SLS_URL=${{ secrets.REACT_APP_SERVERLESS_URL }} build

      - name: Push images to docker hub
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
        run: |
          docker image ls
          docker tag excel-csvtotable-nginx:latest $DOCKER_USER/serverless-nginx:latest
          docker tag excel-csvtotable-webcontent:latest $DOCKER_USER/serverless-reactapp:latest
          docker push $DOCKER_USER/serverless-nginx:latest
          docker push $DOCKER_USER/serverless-reactapp:latest

  DeployToEC2Instance:
    runs-on: ubuntu-latest
    needs: ReactAppDeployment
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: create a pem file
        run: |
          cat > reactapp.pem << EOL
          ${{ secrets.SSH_KEY }}
          EOL
          ls -ltr
          chmod 400 reactapp.pem
          ls -ltr
          sudo scp -i reactapp.pem -v -o StrictHostKeyChecking=no docker-compose-prod.yml ubuntu@${{ secrets.HOST_SCP }}:~/.

      - name: Login to EC2 and run the docker images
        uses: appleboy/ssh-action@v1.0.3
        with:
          key: ${{ secrets.SSH_KEY }}
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          script: |
            ls
            sudo docker ps -a
            sudo docker image ls
            sudo docker ps -q | xargs docker stop
            sudo docker ps -a -q | xargs docker rm
            sudo docker rmi $(docker images -q)
            sudo docker pull ${{ secrets.WEB_IMAGE }}
            sudo docker pull ${{ secrets.NGINX_IMAGE }}
            sudo WEB_IMAGE=${{ secrets.WEB_IMAGE }} NGINX_IMAGE=${{ secrets.NGINX_IMAGE }} docker-compose -f docker-compose-prod.yml up -d
